dnl Process this file with autoconf to produce a configure script.
AC_INIT(joq.c)
AC_CONFIG_HEADER(config.h)

dnl Checks for programs.
AC_PROG_AWK
AC_PROG_CC
AC_PROG_CPP
AC_CHECK_PROG(FSTAT, fstat, yes)
if test "$ac_cv_prog_FSTAT" = yes; then
   AC_DEFINE(HAVE_FSTAT)
fi

dnl Checks for libraries.
AC_CHECK_LIB(crypt, crypt)

dnl Checks for header files.
AC_HEADER_DIRENT
AC_HEADER_STDC
AC_CHECK_HEADERS(fcntl.h limits.h sys/file.h sys/time.h unistd.h malloc.h\
 stdlib.h ndbm.h sys/select.h)
AC_CHECK_SYS_ERRLIST

dnl Checks for typedefs, structures, and compiler characteristics.
AC_TYPE_OFF_T
AC_HEADER_TIME
AC_STRUCT_TM
AC_C_BIGENDIAN
AC_STUPID_REOPEN
AC_SHORT_CRYPT
AC_SHORT_RAND

dnl This always succeeds, how do we get it to test for warnings?
cat > conftest.$ac_ext <<EOF
int test(short x);
int main() { return 0; }
int test(x) short x; { return 0; }
EOF
${CC-cc} -c $CFLAGS $CPPFLAGS conftest.$ac_ext 1>&5 2>stderr
if test -s stderr; then
   AC_DEFINE(USE_INT_PROTOS)
fi
rm -f stderr

dnl Checks for library functions.
AC_TYPE_SIGNAL
AC_CHECK_FUNCS(gethostname mktime putenv select socket strftime strstr\
 strncasecmp cuserid lockf flock timelocal dbm_open sysinfo inet_addr)
if test $ac_cv_func_inet_addr = no; then
   # inet_addr is not in the default libraries.  See if it's in some other.
   for lib in nsl bsd socket inet; do
      AC_CHECK_LIB($lib, inet_addr, [LIBS="$LIBS -l$lib"; break])
   done
fi
AC_CHECK_FUNCS(inet_network)
if test $ac_cv_func_inet_network = no; then
   # inet_network is not in the default libraries.  See if it's in some other.
   for lib in socket inet; do
      AC_CHECK_LIB($lib, inet_network, [LIBS="$LIBS -l$lib"; break])
   done
fi

AC_OUTPUT(Makefile)
